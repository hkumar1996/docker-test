terraform {
  required_providers {
    aws ={
        source = "hashicorp/aws"
        version = "~>4.0"
    }
  }
}
provider "aws" {
    region = "ap-southeast-2"
}
variable "ssh_keyname" {
  description = "ssh_keyname"
  type = string
  default = "kedari.pem"
}

locals {
  vpc_id = "vpc-03f560ea730cfb0a5"
  subnet_id = "subnet-0583671ec3845863d"
  private_key_path = "./kedari.pem"
}

resource "aws_security_group" "my-sg" {
  vpc_id = "vpc-03f560ea730cfb0a5"
  ingress {
    cidr_blocks = ["0.0.0.0/0"]
    from_port   = "22"
    to_port     = "22"
    protocol    = "tcp"
  }
  ingress {
    cidr_blocks = ["0.0.0.0/0"]
    from_port   = "80"
    to_port     = "80"
    protocol    = "tcp"
  }
}

resource "aws_instance" "myserver" {
  ami                    = "ami-0dfb78957e4edea0c"  #Amazon linux
  subnet_id              = "subnet-0583671ec3845863d"
  vpc_security_group_ids = [aws_security_group.my-sg.id]
  instance_type          = "t2.micro"
  associate_public_ip_address = true
  key_name               = "kedari"
  tags = {
    "Name" = "my-instance"
    "Env"  = "Dev"
  }
 provisioner "remote-exec" {
    inline = ["echo 'wait untill SSH is ready'"]
  }
  connection {
    type        = "ssh"
    user        = "ec2-user"
    private_key = file("./kedari.pem")
    #agent       = "false"
    host        = self.public_ip
  }
  provisioner "local-exec" {
    command = "ansible-playbook -i ${self.public_ip}, --private-key ${local.private_key_path} file.yaml"
}
}
output "mysever_ip" {
  value = aws_instance.myserver.public_ip
}
